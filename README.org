#+setupfile: ~/.org-mode-goodies/setup.org

* Cursor Chat History Exporter

This project provides tools to extract and export AI service prompts from Cursor's workspace history databases. It is designed for users who want to analyze or archive their chat history from the Cursor editor.

* Badges
  [[https://opensource.org/licenses/MIT][MIT License]]

* Quickstart

#+BEGIN_SRC shell
git clone <repo-url>
cd Cursor.AI
make install
make run
#+END_SRC

* Features
- Recursively finds all ~state.vscdb~ files in Cursor workspace storage
- Extracts ~aiService.prompts~ from each database
- Exports prompts to Org-mode files for easy reading and organization
- Supports both multi-workspace and single-file modes
- Modern Python: functional programming, dataclasses, static methods, context managers

* Requirements
- Python 3.8+
- ~uv~ (for dependency management)
- ~duckdb~
- ~pytest~ (for running tests)

* Usage

** Export All Workspace Prompts

#+BEGIN_SRC shell
make run
#+END_SRC

This will:
- Install the package in editable mode
- Run the exporter, which scans all Cursor workspaceStorage directories and exports prompts to ~chat_history_exports/*.org~

** Export Prompts from a Specific File

#+BEGIN_SRC shell
python cursor_chat_history.py /path/to/state.vscdb
#+END_SRC

* Testing

Run the test suite with:

#+BEGIN_SRC shell
make test
#+END_SRC

* Project Structure

- ~cursor_chat_history.py~ :: Main script and library
- ~tests/~ :: Unit tests
- ~chat_history_exports/~ :: Output directory for exported Org files

* Example Output

Each exported Org file will contain entries (your past prompts) like:

#+BEGIN_EXAMPLE
* What is the capital of France?
* Summarize this article.
#+END_EXAMPLE

* Troubleshooting

- If you see errors about missing ~duckdb~, install it with ~uv pip install duckdb~.
- If no files are exported, check that you have Cursor installed and have used it to generate workspace history.

* Contributing

Contributions are welcome! Please open issues or submit pull requests.

* License

MIT License (see LICENSE file) 
